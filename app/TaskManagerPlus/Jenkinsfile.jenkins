pipeline {
    agent any

    environment {
        ANDROID_HOME = "C:\\Users\\maico\\AppData\\Local\\Android\\Sdk"
        PATH = "${env.ANDROID_HOME}\\tools;${env.ANDROID_HOME}\\platform-tools;${env.PATH}"
        AVD_NAME = "Galaxy A22 5G API 33 - Local"
        GRADLE_USER_HOME = "${env.WORKSPACE}\\.gradle"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Iniciando a etapa de Checkout'
                git branch: 'main',
                    url: 'https://github.com/maiconfang/taskmanagerplus-android-app.git',
                    credentialsId: 'github-pat'
                echo 'Checkout concluído com sucesso'
            }
        }

        stage('Preparar Pasta de Destino') {
            steps {
                echo 'Criando pasta de destino apk-outputs, se não existir.'
                bat 'if not exist apk-outputs mkdir apk-outputs'
            }
        }

        stage('Build Aplicativo') {
            steps {
                echo 'Iniciando a etapa de Build Aplicativo'
                bat 'cd app\\TaskManagerPlus && .\\gradlew.bat clean assembleDebug copyAndRenameDebugApk --info'
                echo 'Build Aplicativo concluído com sucesso'
            }
        }

        stage('Verificar APK na Nova Pasta') {
            steps {
                echo 'Verificando se o APK foi copiado para a nova pasta: apk-outputs'
                bat 'dir apk-outputs'
                bat '''
                    if exist apk-outputs\\TaskManagerPlus-debug.apk (
                        echo APK copiado com sucesso para apk-outputs.
                    ) else (
                        echo APK NÃO encontrado na pasta apk-outputs!
                        exit /b 1
                    )
                '''
            }
        }

        stage('Iniciar Emulador') {
            steps {
                script {
                    echo 'Iniciando o emulador Android'
                    bat """
                        start /B emulator -avd "${env.AVD_NAME}" -no-window -no-audio
                        timeout /t 60
                        adb wait-for-device
                        adb shell settings put global window_animation_scale 0
                        adb shell settings put global transition_animation_scale 0
                        adb shell settings put global animator_duration_scale 0
                    """
                    echo 'Emulador iniciado e configurado'
                }
            }
        }

        stage('Executar Testes') {
            steps {
                echo 'Executando Testes Automatizados'
                bat 'cd app\\TaskManagerPlus && .\\gradlew.bat connectedAndroidTest --info'
                echo 'Testes concluídos com sucesso'
            }
        }

        stage('Publicar Relatório de Teste (HTML)') {
            steps {
                echo 'Publicando Relatório de Teste HTML'
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'app/TaskManagerPlus/app/build/reports/androidTests/connected/debug',
                    reportFiles: 'index.html',
                    reportName: 'Relatório de Teste Android'
                ])
                echo 'Relatório de Teste HTML publicado'
            }
        }

        stage('Build APK Release') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Iniciando a etapa de Build APK Release'
                bat 'cd app\\TaskManagerPlus && .\\gradlew.bat assembleRelease --info'
                echo 'Build APK Release concluído com sucesso'
            }
        }

        stage('Verificar APK Release Gerado') {
            steps {
                echo 'Verificando se o APK de release foi gerado na pasta esperada:'
                bat 'dir app\\TaskManagerPlus\\app\\build\\outputs\\apk\\release'
            }
        }

        stage('Encerrar Emulador') {
            steps {
                echo 'Encerrando o Emulador Android'
                bat 'adb emu kill'
                echo 'Emulador encerrado'
            }
        }
    }

    post {
        success {
            // Armazena o APK de debug da nova pasta como artefato
            archiveArtifacts artifacts: 'apk-outputs/TaskManagerPlus-debug.apk', allowEmptyArchive: false

            // Armazena o APK de release não assinado como artefato
            archiveArtifacts artifacts: 'app/TaskManagerPlus/app/build/outputs/apk/release/app-release-unsigned.apk', allowEmptyArchive: false
        }
        failure {
            echo 'O build falhou. O APK não será gerado devido a falhas nos testes.'
        }
        always {
            echo 'Pipeline concluída'
        }
    }
}
