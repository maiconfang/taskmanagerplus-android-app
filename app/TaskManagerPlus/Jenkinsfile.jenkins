pipeline {
    agent any

    environment {
        ANDROID_HOME = "C:\\Users\\maico\\AppData\\Local\\Android\\Sdk"
        PATH = "${env.ANDROID_HOME}\\tools;${env.ANDROID_HOME}\\platform-tools;${env.PATH}"
        AVD_NAME = "Galaxy_A22_5G_API_33_-_Local" // Use 'emulator -list-avds' to list AVD names
        GRADLE_USER_HOME = "${env.WORKSPACE}\\.gradle"
        APK_OUTPUT_DIR = "C:\\ApksGenerated"
        APP_PACKAGE = "maif.taskmanagerplus" // Package name of the app
    }

    stages {
        stage('Start Emulator') {
            steps {
                script {
                    echo 'Starting Android emulator'
                    bat """
                        start "Emulator" "${env.ANDROID_HOME}\\emulator\\emulator.exe" -avd "${env.AVD_NAME}" -no-window -no-audio -gpu swiftshader_indirect
                        ping -n 60 127.0.0.1 > nul
                        "${env.ANDROID_HOME}\\platform-tools\\adb.exe" wait-for-device
                    """
                    echo 'Emulator should now be started and configured'
                }
            }
        }

        // Etapa para desinstalar APK existente
        stage('Uninstall Existing APK') {
            steps {
                echo 'Uninstalling existing APK to avoid INSTALL_FAILED_UPDATE_INCOMPATIBLE error'
                bat """
                    adb shell pm list packages | findstr "${env.APP_PACKAGE}" > nul
                    if errorlevel 0 (
                        adb shell pm clear "${env.APP_PACKAGE}"
                        adb uninstall "${env.APP_PACKAGE}"
                    ) else (
                        echo "No existing APK found. Proceeding with installation."
                    )
                """
            }
        }

        stage('Install APK on Emulator') {
            steps {
                echo 'Installing APK on emulator'
                bat 'adb install -r apk-outputs\\TaskManagerPlus-debug.apk'
            }
        }

        stage('Verify Installed APK') {
            steps {
                echo 'Checking if the app is already installed on the emulator'
                bat """
                    adb shell pm list packages | findstr "${env.APP_PACKAGE}"
                """
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed'
            bat 'adb emu kill'
            echo 'Emulator stopped'
        }
    }
}
